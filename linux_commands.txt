ls  


-R	Рекурсивно обійти підкаталоги, що зустрілися.
-а	Вивести список усіх файлів (без цієї опції не виводяться приховані файли, імена яких починаються з точки).
-d	Якщо аргумент є каталогом, виводити тільки його ім'я, а не вміст. Часто використовується з прапором -l для отримання інформації про стан каталогу.
-C	Виведення в кілька колонок із сортуванням по колонках.
-x	Виведення в кілька колонок із сортуванням по рядках.
-m	Виведення у вільному форматі, імена файлів розділяються комами.
-l	Висновок у довгому форматі: перед іменами файлів видається режим доступу, кількість посилань на файл, імена власника та групи, розмір у байтах та час останньої модифікації (див. нижче). Якщо файл є спеціальним, то поле розміру виводиться старший і молодший номери пристрою.
-n	Те саме, що і -l, але ідентифікатори власника та групи виводяться у вигляді чисел, а не у вигляді імен.
-o	Те саме, що і -l, але ідентифікатор групи не виводиться.
-g	Те саме, що і -l, але ідентифікатор власника не виводиться.
-r	Змінити порядок сортування на зворотний алфавітний або, за наявності прапора -t, спочатку виводити старіші файли.
-t	Імена файлів сортуються не за алфавітом, а за часом (спочатку йдуть найсвіжіші файли). За промовчанням використовується час останньої зміни. також прапори -u і -c.
-u	Замість останньої зміни використовувати час останнього доступу для сортування (з прапором -t) або для виведення (з прапором -l).
-c	Замість останньої зміни використовувати час останньої модифікації описувача файлу (тобто час створення файлу, зміни режиму доступу до нього тощо) для сортування (з прапором -t) або для виведення (з прапором -l).
-стор	Якщо файл є каталогом, то видаватиме після його імені символ /.
-F	Якщо файл є каталогом, то видаватиме після його імені символ /; якщо файл виконується, то видавати після його імені символ *.
-b	Видавати недруковані символи, що входять до імені файлу, у вісімковому вигляді (ddd).
-q	Видавати недруковані символи, що входять до імені файлу, у вигляді символу ?.
-i	Видавати у першій колонці номери описувачів файлів.
-s	Видавати розмір файлів у блоках (включаючи непрямі блоки).
-f	Розглядати кожен аргумент як каталог та виводити його вміст. Цей прапор скасовує прапори -l, -t, -s, -r і включає прапорець -a. Сортування імен файлів не провадиться; імена видаються у порядку, як вони перелічені у каталозі.
Тепер кілька прикладів найкорисніших опцій.

Вивести список лише каталогів:

# ls -d -1 /home/setevoy/*/
/home/setevoy/Desktop/
/home/setevoy/Downloads/
/home/setevoy/Dropbox/
/home/setevoy/Images/
/home/setevoy/Soft/
/home /setevoy/Temp/
/home/setevoy/VirtualBox VMs/

Те саме, але з використанням “довгого” (повного) висновку про каталоги:

# ls -dl /home/setevoy/*/
drwxr-xr-x 2 setevoy setevoy 4096 May 6 10:22 /home/setevoy/Desktop/
drwxr-xr-x 2 setevoy setevoy 4096 May 5 10:38 /home/ 16 setevoy setevoy 4096 May 6 07:40 /home /
setevoy/Dropbox/ drwxr- xr
-x 2 setevoy setevoy 4096 May 5 12:00
setevoy 4096 May 5 18:29 /home/setevoy/Soft/
drwxrwxr-x 2 setevoy setevoy 4096 May 5 20:15 /home/setevoy/Temp/
drwxrwxr-x 4 setevoy setevoy 409 VirtualBox VMs/

Ключ -l дуже корисний, тому що дозволяє перевіряти власника та права на файли/каталоги:

# ls -l
total 32
drwxr-xr-x 2 root root 4096 23 серпня 2012 bin
drwxr-xr-x 2 root root 4096 23 серпня 2012 etc
drwxr-xr-x 2 root root 4096 23 серпня 2012 ігри
drwxr-xr-x 2 root root 4096 23 серпня 2012 року включає
drwxr-xr-x 4 root root 4096 5 травня 11:13 lib
lrwxrwxrwx 1 root root 9 травня 5 10:22 man -> share/man
drwxr-xr-x 2 root root 4096 23 серпня 2012 sbin
drwxr-xr-x 7 root root 4096 23 серпня 2012 share
drwxr-xr-x 2 root root 4096 23 серпня 2012 src

Для виведення інформації про приховані файли (починаються з точки) використовуйте ключ -a :

# ls -la
ls: cannot access .gvfs: Permission denied
total 524
drwxr-xr-x 37 setevoy setevoy 4096 May 6 21:20 . drwxr- xr
-x 3 root root 4096 May 5 10:25 ..
drwx—— 3 setevoy setevoy 4096 May 5 10:39
.
–r– 1 setevoy setevoy 220 May
5
10:25
. setevoy setevoy 4096 May 5 10:54 .compiz-1
drwx—— 20 setevoy setevoy 4096 May 6 10:38 .config
drwx—— 3 setevoy setevoy 4096 May 5 10:38 .dbus

…

Про помилку з .gvfs можна прочитати у статті ls: cannot access .gvfs: Permission denied .

Коротко зупинимося на позначеннях прав доступу та позначення файлів/каталогів. Перший символ:

d – файл є каталогом;
b - файл є спеціальним блоковим файлом;
c – файл спеціальний символьний файл;
p - файл є іменованим каналом;
– – звичайний файл.

Далі йдуть три групи символів, що позначають права доступу - r ( read ), w ( write ), x ( execute ) - читання, запис у файл/каталог і виконання відповідно. Тема прав доступу в UNIX дуже велика, тому зараз не будемо вдаватися до подробиць.

Відкрити для редагування останній файл, що редагувався:

# nano file1.txt
# nano file2.txt
# nano `ls -t | головка -1`

Звичайне виведення ls без ключів виводить усі файли/каталоги одним рядком. Щоб вивести їх у колонку – виконуємо:

# ls -1 Завантаження
для робочого столу Dropbox file1.txt file2.txt Зображення Soft Temp VirtualBox VM








Ключ -h використовується висновку інформації про розмірі у “человекоудобном” вигляді, тобто. в Kb, Mb, Gb :

# ls -lh
36K
drwxr-xr-x 2 setevoy setevoy 4.0K May 6 10:22 Desktop
drwxr-xr-x 2 setevoy setevoy 4.0K May 5 10:38 Downloads
drwx—— 16 setevoy sete. 40 Dropbox
-rw-r–r– 1 root root 2 May 6 21:06 file1.txt
-rw-r–r– 1 root root 2 May 6 21:06 file2.txt
drwxr-xr-x 2 setevoy setevoy 4.0K May 5 12:00 Images
drwxr-xr-x 2 setevoy setevoy 4.0K May 5 18:29 Soft
drwxrwxr-x 2 setevoy setevoy 4.0K May 5 20:15 Temp
drwxrwxr-x 4 sete VMs

Відсортувати файли/каталоги за їх розміром, починаючи з найбільшого:

# ls -lS /var/log/
total 4152
-rw-r–r– 1 root root 1823273 6 травня 19:46 dpkg.log
-rw-r—– 1 syslog adm 825505 6 травня 08:05 syslog.1
-rw -r—– 1 syslog adm 589203 6 травня 19:25 kern.log
-rw-r–r– 1 кореневий корінь 47105 23 серпня 2012 bootstrap.log
-rw-r–r– 1 кореневий кореневий 37440 6 травня 19:46 aptitude
-rw-r–r– 1 корінь 20584 6 травня 19:39 -powersave.log
-rw-r—– 1 корінь adm 14329 5 травня 11:38 dmesg.1.gz
-rw-r–r– 1 корінь root 6167 6 травня 07:39 kdm.log
drwxr-xr-x 2 root root 4096 5 травня 10:25 apt
-rw-r—– 1 root adm 31 23 серпня 2012 завантаження
-rw-r—– 1 syslog adm 0 5 травня 10:38 ufw.log

Відтворити файли/каталоги за датою останньої модифікації, нові – наприкінці списку:

# ls -rtl /var/log/
total 4152
drwx—— 2 root-dispatcher 4096 6 лютого 2012 voice-dispatcher
drwxr-xr-x 2 root 4096 12 березня 2012 unattended-upgrades
…
drwxr-xr-x 2 root root 4096 10 серпня 2012 dist-upgrade
…
-rw-r–r– 1 корінь 47105 23 серпня 2012 bootstrap.log
…
-rw-r–r– 1 корень 2990 5 травня 19:20 fontconfig.log
…
-rw-r —– 1 syslog adm 60874 6 травня 21:14 syslog

Щоб вивести нові на початку списку - використовуйте комбінацію опцій без ключа -r :

# ls -tl /var/log/

Те ж саме, але сортувати за датою останнього доступу до файлу, а не за датою його модифікації, використовуйте ключ -u :

# ls -tlu /var/log/

Вивести список файлів/каталогів, поділений на 5 колонок, розділених на всю ширину вікна:

# ls /usr/локальний | pr -T5 -W$COLUMNS
bin games lib sbin src
тощо включають man share

Додавати символ позначення приналежності файлу/каталогу – каталог ( / ), файл ( * ), FIFO ( | ), символьне посилання ( @ ), сокети сімейства AF_UNIX ( = ):

# ls -F -1
Desktop/
Downloads/
Dropbox/
file1
file1.txt
file2
file2.txt
file3
file4.txt@
Images/
Soft/
Temp/
VirtualBox VMs/

Втім, ту саму інформацію виводить і ls -l - перший символ d для каталогів ( directory ) і -> ; для посилань:

# ls -l
total 36
drwxr-xr-x 2 setevoy setevoy 4096 May 6 10:22 Desktop
…
lrwxrwxrwx 1 root root 9 May 6 21:20 file4.txt -> file1.txt

Виводити список через кому:

# ls -m
Desktop, Downloads, Dropbox, file1, file1.txt, file2, file2.txt, file3, file4.txt, Images, Soft, Temp, VirtualBox VMs

Вивести список рекурсивно, включаючи підкаталоги та їх вміст:

# ls -R
.: Завантаження
для робочого столу Dropbox Images Soft Temp VirtualBox VMs






./Desktop:
PDF-Viewer.desktop
PDF-Viewer.lnk

./Завантаження:

./Dropbox:
172210-1920×1080.jpg
271027-1366×768.jpg
…

Остортувати файли/каталоги у зворотному алфавітному порядку:

# ls -r
VirtualBox VMs Temp Soft Images file4.txt file3 file2.txt file2 file1.txt file1 Dropbox Downloads Desktop

Вивести інформацію про номери inode файлів та каталогів:

# ls -i -1
2368762 Desktop
1969746 Завантаження
1987155 Dropbox
1987223
Файл1
1969890
Файл1.txt 1987865 Файл2 1969805 Файл2.txt 1987866
Файл3
1987863 Файл4.txt
1969751 Зображення
2141585 Soft
2368300 Темп
2141811 Віртуалізація

Вивести інформацію про користувача/групу у вигляді UID та GID замість символьних імен:

# ls -n
total 36
drwxr-xr-x 2 1000 1000 4096 6 травня 10:22 Робочий стіл
drwxr-xr-x 2 1000 1000 4096 5 травня 10:38 Завантаження
drwx—— 16 1000 1000 4096 6 травня 07:40 Dropbox
- rw-r–r– 1 0 0 0 6 травня 21:10 file1
-rw-r–r– 1 0 0 2 6 травня 21:06 file1.txt
-rw-r–r– 1 0 0 0 6 травня 21: 10 file2
-rw-r–r– 1 0 0 2 6 травня 21:06 file2.txt
-rw-r–r– 1 0 0 0 6 травня 21:10 file3
lrwxrwxrwx 1 0 0 9 6 травня 21:20 file4. txt -> file1.txt
drwxr-xr-x 2 1000 1000 4096 5 травня 12:00 Зображення
drwxr-xr-x 2 1000 1000 4096 5 травня 18:29 Софт
drwxrwxr-x 2 1000 1000 4096 5 травня 20:15 Темп.
drwxrwxr-x 4 1000 1000 4096 5 травня 19:09 Віртуальні машини VirtualBox



cd:

Команда cd(«змінити каталог») використовується для зміни поточного робочого каталогу в Linux та інших Unix-подібних операційних системах. Це одна з найпростіших і часто використовуваних команд під час роботи на терміналі Linux.

Поточний робочий каталог – це каталог (папка), у якому зараз працює користувач. Щоразу, коли ви взаємодієте з командним рядком, ви працюєте в каталозі.
Ця стаття покаже вам, як використовувати cdкоманду для навігації системним деревом каталогів.
Команда cd
cd є вбудованою оболонкою, і її поведінка може дещо відрізнятися від оболонки до оболонки. Він використовує змінні середовища оболонки для визначення необхідної інформації для його виконання.

Ми розглянемо вбудовану в Bash версію cd.
Синтаксис cd команди такий:
cd [OPTIONS] directory
Копія
Команда приймає лише два параметри, які використовуються рідко.
−L, Перейдіть за символічними посиланнями . За замовчуванням cd поводиться так, ніби -L вказано параметр.
−P, Не переходьте за символічними посиланнями. Іншими словами, якщо вказано цей параметр і ви спробуєте перейти до символічного посилання, яке вказує на каталог, cd зміниться на каталог.
У своїй найпростішій формі, коли використовується без будь-яких аргументів, cd ви перейдете до домашнього каталогу.

Під час навігації файловою системою ви можете використовувати Tab клавішу для автоматичного заповнення назв каталогів. Додавати скісну риску в кінці назви каталогу необов’язково.

Щоб перейти до каталогу, ви повинні мати дозволи на виконання для цього каталогу.

Команда pwd дозволяє вам дізнатися, у якому каталозі ви зараз перебуваєте.

Абсолютні та відносні імена шляхів
Указуючи каталог для переходу, ви можете використовувати або абсолютні, або відносні імена шляхів. Абсолютний або повний шлях починається з кореня системи /, а відносний шлях починається з вашого поточного каталогу.
За замовчуванням, коли ви входите у систему Linux, ваш поточний робочий каталог встановлюється на ваш домашній каталог. Якщо припустити, що Downloads каталог існує у вашому домашньому каталозі, ви можете перейти до нього за допомогою відносного шляху до каталогу:
cd Downloads
Копія
Ви також можете перейти до того самого каталогу, використовуючи його абсолютний шлях:

cd /home/username/Downloads
Копія
Коротше кажучи, якщо шлях починається з косої риски ( /), це абсолютний шлях до каталогу.

Батьківський каталог
В Unix-подібних операційних системах поточний робочий каталог позначається однією крапкою ( .). Дві крапки ( ..), одна за одною, представляють батьківський каталог або каталог безпосередньо над поточним.
Якщо ви введете cd ., ви перейдете до поточного каталогу або, іншими словами, команда нічого не зробить.

Припустимо, ви зараз перебуваєте в /usr/local/share каталозі. Щоб перейти до /usr/local каталогу (на один рівень вище від поточного каталогу), ви повинні ввести:

cd ../
Копія
Щоб переміститися на два рівні вище до /usr каталогу (батьківського каталогу), ви можете виконати наступне:
cd ../../
Копія
Ось інший приклад. Припустімо, ви перебуваєте в /usr/local/share каталозі та хочете перейти до /usr/local/src. Ви можете зробити це, ввівши:

cd ../src
Копія
Перейдіть до попереднього каталогу
Щоб повернутися до попереднього робочого каталогу, передайте -символ тире ( ) як аргумент команді cd:
cd -
Копія
Перейдіть до домашнього каталогу
Щоб перейти до домашнього каталогу, просто введіть cd. Ще один спосіб повернутися безпосередньо до вашого домашнього каталогу – це використовувати ~ символ тильди ( ), як показано нижче:
cd ~
Копія
Наприклад, якщо ви хочете перейти до Downloads каталогу, який знаходиться у вашому домашньому каталозі, ви повинні ввести:

cd ~/Downloads
Копія
Ви також можете перейти до домашнього каталогу іншого користувача за допомогою такого синтаксису:

cd ~username
Копія
Каталоги з пробілом у їхніх назвах
Якщо в назві каталогу, до якого ви хочете перейти, є пробіли, ви повинні або взяти шлях у лапки, або використати символ зворотної косої риски ( \), щоб уникнути пробілу:

cd 'Dir name with space'
Копія
cd Dir\ name\ with\ space






 touch


Будь-яка система Linux постачається з декількома попередньо встановленими інструментами. Одним із таких інструментів є команда дотику. Команда linux touch призначена для зміни часових позначок у метаданих файлу, таких як час доступу та модифікації. Однак він також широко використовується для створення нового порожнього файлу в потрібному місці. За наявності відповідного дозволу на доступ до файлу команда touch може змінити мітки часу будь-якого файлу. Якщо файл не існував раніше, замість нього створюється файл. У цьому посібнику ми глибше зануримося у використання команди touch у Linux.

Синтаксис команди Touch
Основна структура команди сенсорної команди така:

$ touch < options > < file_or_dir_name >

Цей інструмент може працювати без наданих опцій. Він також підтримує кілька параметрів для розширених запитів. Деякі варіанти мають скорочені форми. Якщо для опції потрібна додаткова інформація, її необхідно надати.

Параметри команди Touch
Ось деякі з поширених параметрів, доступних для команди дотику.

–version або -v : відображає версію програми.
–help : друкує меню довідки.
-a : Змінює час доступу.
-m : змінює час модифікації.
-no-dereference або -h : змінити мітку часу символічного посилання.
-c або –no-create : файл не створюється, якщо він не існує.
–date=<рядок> або –d=<рядок> : Мітка часу змінюється відповідно до рядка дати.
–reference=<file> або –r=<file> : Мітка часу змінюється відповідно до еталонного файлу.
-t <штамп> : змінює позначку часу. Тут штамп має формат дати/часу .

Час доступу ( atime ): Ця позначка часу відстежує, коли файл востаннє було прочитано будь-якою командою, наприклад grep і cat .

Час зміни ( ctime ): Ця позначка часу відстежує час останньої зміни будь-якої властивості файлу. Такі дії, як перейменування файлу , зміна дозволу або переміщення файлу тощо, змінять його значення.

Час модифікації ( mtime ): Ця позначка часу відстежує, коли вміст файлу було востаннє змінено.

touch test.txt 

touch test.txt1 test.txt2

touch test_{1..10}.txt

touch test_{a..j}.txt

Щоб установити певну позначку часу для файлу, структура команд виглядає наступним чином:

$ touch -t < timestamp > < file_name >
<timestamp> має певну структуру.

$ [ [ CC ] YY ] MMDDhhmm [ .ss ]
тут,

CC : перші дві цифри року.
YY : дві останні цифри року.
ММ : Місяць
DD : День місяця
чч : година
мм: хвилина
ss: Секунди
Елементи в квадратних дужках є необов’язковими. Якщо значення YY становить 0-68, тоді CC автоматично приймається 20. Якщо значення YY становить 69-99, тоді CC приймається 19.

Встановлення конкретної позначки часу за допомогою рядка дати
Зручнішим способом зміни мітки часу є використання рядків дати. Синтаксис використання рядків дати такий:

$ touch -d < рядок_дати > < ім'я_файлу >

Однією з переваг використання рядка дати є його гнучкість. Він підтримує різні зрозумілі людині текстові форми, наприклад,

Відносний час: «5 років тому», «вчора», «наступного вівторка» тощо.
Календарні дати: «1 січня 1969», «2 лютого 2022» тощо.
Будні: «неділя», «понеділок» тощо.
Час доби: «2:22 ранку», «12:22 вечора» тощо.


Приклад:
$ touch -d "1 січня 2011" test.txt

Зміна часу доступу до файлу
Є два способи змінити час файлу .





Зміна часу доступу до файлу на поточний

Наступна сенсорна команда встановить мітку часу доступу цільового файлу до поточного часу:

$ touch -a < ім'я_файлу >

Наприклад, змініть atime для test.txt на поточний час:

$ touch -a test.txt

Ми також можемо вказати час доступу до файлу явно. Для цього ми об’єднаємо позначки «-a» і «-t». Структура команд буде виглядати так:

$ touch -at < timestamp > < file_name >

Наприклад, наступна команда встановить час доступу до файлу test.txt на 1 січня 1999 року:

$ touch -у 9901010000 test.txt




Зміна часу модифікації
Використовуючи команду дотику, ви можете змінити час модифікації ( mtime ) файлу. Є два способи зробити це.

Зміна mtime на поточний

Наступна сенсорна команда встановить для mtime файлу поточний час.

$ touch -m < ім'я_файлу >

Наприклад, змініть mtime у test.txt на поточний час:

$ touch -m test.txt



Зміна mtime явно

Ми можемо об’єднати прапорці «-m» і «-t», щоб встановити настроюваний mtime. Синтаксис такий:

$ touch -mt < timestamp > < file_name >
Наприклад, зміна mtime на «1 січня 1999» виглядатиме так:

$ touch -mt 9901010000 test.txt



Зміна mtime та atime

За допомогою команди touch ми можемо використовувати кілька варіантів. Використовуючи цю функцію, ми можемо встановити mtime та atime файлу в одній команді. Синтаксис виглядатиме так:

$ touch -am < ім'я_файлу >

Зауважте, що в цьому прикладі час змінено на поточний. Якщо вам потрібен конкретний час, то вам потрібно використовувати прапорець «-t» для певної позначки часу.

Уникайте створення нових файлів
Якщо використовується з прапорцем «-c», команда touch не створить файл, якщо він не існує.

$ touch -c < ім'я_файлу >




Зміна позначки часу за допомогою довідкового файлу
Ми можемо наказати дотику використовувати мітки часу довідкового файлу. Структура команд така:

$ touch -r < довідковий_файл > < ім'я_файлу >

Цільовий файл успадкує мітки часу від еталонного файлу.

