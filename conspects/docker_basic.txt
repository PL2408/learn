"Докер - це потужний інструмент для контейнеризації, який дозволяє упаковувати, переносити та виконувати програмне забезпечення в ізольованому середовищі, відомому як контейнер. Одна з ключових переваг Docker - це легкість управління залежностями та конфігураціями середовища.

Основна ідея полягає в тому, щоб увібрати програму та всі її залежності в контейнер, забезпечуючи консистентність між різними середовищами, такими як розробка, тестування та продакшн. Це дозволяє уникнути проблем, пов'язаних з різницею між середовищами розробки та виробництва.


Контейнеризація та віртуалізація - це дві різні стратегії ізоляції та розгортання програмного забезпечення. Ось короткий огляд їх відмінностей:

1. Рівень Ізоляції:

Віртуалізація: У віртуальних машинах (VM), кожна операційна система має свою віртуальну копію апаратного забезпечення. Вони ізольовані одна від одної та від основної системи.

Контейнеризація: Контейнери ділять ядро операційної системи та використовують її ресурси. Вони легше та швидше, оскільки не включають в себе повну операційну систему, а лише необхідні бібліотеки та файлові системи.

2. Ресурси:

Віртуалізація: VM вимагають більше ресурсів, оскільки кожна має своє операційне ядро та запускається на гіпервізорі.

Контейнеризація: Контейнери ділять ресурси операційної системи, що робить їх більш ефективними використанням ресурсів та швидшими в запуску.

Пошук та завантаження образу:

docker search <ім'я_образу>: Пошук образів у Docker Hub.
docker pull <ім'я_образу>: Завантаження образу на локальну машину.
Взаємодія з образами:

docker images: Відображення списку усіх локальних образів.
docker rmi <ім'я_образу>: Видалення образу з локальної машини.
Створення та управління контейнерами:

docker run <ім'я_образу>: Запуск контейнера з використанням певного образу.
docker ps: Перегляд активних контейнерів.
docker ps -a: Перегляд усіх контейнерів, включаючи завершені.
docker start <ім'я_контейнера>: Запуск зупиненого контейнера.
docker stop <ім'я_контейнера>: Зупинка контейнера.
docker restart <ім'я_контейнера>: Перезапуск контейнера.
Взаємодія з контейнером:

docker exec -it <ім'я_контейнера> <команда>: Виконання команди всередині контейнера (інтерактивний режим).
docker logs <ім'я_контейнера>: Перегляд журналу виводу контейнера.
Управління мережами:

docker network ls: Перегляд списку мереж, доступних Docker.
docker network inspect <ім'я_мережі>: Детальна інформація про мережу.
Взаємодія з Docker Hub:

docker login: Авторизація у Docker Hub.
docker push <ім'я_образу>: Відправлення образу на Docker Hub.
