Увімкнення
BIOS
MBR, також відомий як головний завантажувальний запис
Завантажувач (наприклад, GRUB)
Ядро (ОС Linux)
Початковий RAM Disk – образ initramfs
/sbin/init (батьківський процес)
Командна оболонка з getty
Система X Windows (графічний інтерфейс користувача)

--------------------------------------------------------------------------------------------------------

Запуск системи Linux на базі x86 складається з кількох кроків. Коли комп’ютер увімкнено, базова система введення-виведення (BIOS) ініціалізує апаратне забезпечення, зокрема екран і клавіатуру, і перевіряє оперативну пам’ять. Цей процес також називається POST (самоперевірка при ввімкненні).

Після завершення POST керування системою переходить від BIOS до завантажувача. Завантажувач зазвичай зберігається на одному з жорстких дисків системи або в завантажувальному секторі (для традиційних систем BIOS / MBR), або в розділі EFI (для новіших (уніфікованих) розширених інтерфейсів програмного забезпечення або систем EFI / UEFI). До цього етапу машина не має доступу до жодного носія інформації. Після цього інформація про дату, час і найважливіші периферійні пристрої завантажується зі значень CMOS (технологія, яка використовується для накопичувача пам’яті з живленням від батареї, що дозволяє системі відстежувати дату та час, навіть коли вона вимкнена).

Для Linux існує кілька завантажувачів. Найпоширенішими є GRUB (Grand Unified Boot Loader), ISOLINUX (для завантаження зі знімних носіїв) і DAS U-Boot (для завантаження на вбудованих пристроях / приладах). Більшість завантажувачів Linux можуть надати інтерфейс користувача для вибору альтернативних варіантів завантаження Linux і навіть інших операційних систем, які можуть бути інстальовані. Під час завантаження Linux завантажувач відповідає за завантаження образу ядра та початкового диска RAM або файлової системи (яка містить деякі критичні файли та драйвери пристроїв, необхідні для запуску системи) у пам’ять.

---------------------------------------------------------------------------------------------------------

У роботі завантажувача є два чіткі етапи.

Для систем, які використовують метод BIOS/ MBR, завантажувач розміщений у першому секторі жорсткого диска, також відомому як головний завантажувальний запис (MBR). Розмір MBR лише 512 байтів. На цьому етапі завантажувач перевіряє таблицю розділів і знаходить завантажувальний розділ. Як тільки він знаходить завантажувальний розділ, він шукає завантажувач другого етапу, наприклад GRUB, і завантажує його в RAM (оперативну пам’ять). Для систем, які використовують метод EFI / UEFI, мікропрограма UEFI зчитує свої дані диспетчера завантаження, щоб визначити, яку програму UEFI потрібно запустити та звідки (тобто з якого диска та розділу можна знайти розділ EFI). Потім мікропрограма запускає програму UEFI, наприклад GRUB, як визначено в записі про завантаження в диспетчері завантаження мікропрограми. Ця процедура складніша, але універсальніша, ніж старі методи MBR.

Завантажувач другого етапу розміщений у /boot. Відображається екран-заставка, який дозволяє вибрати операційну систему (ОС) для завантаження. Після вибору ОС завантажувач завантажує ядро вибраної операційної системи в оперативну пам’ять і передає їй контроль. Ядра майже завжди стискаються, тому їхня перша робота – розпакувати себе. Після цього воно перевірить і проаналізує апаратне забезпечення системи та ініціалізує будь-які драйвери апаратних пристроїв, вбудовані в ядро.

----------------------------------------------------------------------------------------------------------

Образ файлової системи initramfs містить програми та бінарні файли, які виконують усі дії, потрібні для монтування належної кореневої файлової системи, як-от надання функцій ядра для необхідної файлової системи та драйверів пристроїв для контролерів накопичувачів із засобом під назвою udev (для пристрою користувача), який відповідає за розпізнавання наявних пристроїв, пошук драйверів пристроїв, необхідних для належної роботи, та їх завантаження. Після того, як кореневу файлову систему знайдено, вона перевіряється на наявність помилок і монтується.

Програма mount повідомляє операційній системі, що файлова система готова до використання, і пов’язує її з певною точкою в загальній ієрархії файлової системи (точка монтування). Якщо це вдалося, initramfs очищається з оперативної пам’яті та виконується програма ініціалізації в кореневій файловій системі (/sbin/init).

Init обробляє монтування та перехід до остаточної реальної кореневої файлової системи. Якщо перед отриманням доступу до накопичувача потрібні спеціальні апаратні драйвери, вони мають містити зображення initramfs.

-----------------------------------------------------------------------------------------------------------

Ближче до кінця процесу завантаження init запускає ряд запитів входу в текстовому режимі. Вони дають змогу ввести ваше ім’я користувача, потім пароль і нарешті отримати командну оболонку. Однак, якщо ви використовуєте систему з графічним інтерфейсом входу, ви спочатку не побачите їх.

Як ви дізнаєтесь у розділі 7 «Операції командного рядка», доступ до терміналів, які запускають командні оболонки, можна отримати за допомогою клавіші ALT і функціональної клавіші. Більшість дистрибутивів починаються з шести текстових терміналів і одного графічного термінала, що запускається F1 або F2. У графічному середовищі, щоб перейти до текстової консолі, потрібно натиснути CTRL + ALT + відповідну функціональну клавішу (F7 або F1, що ведуть до GUI).

Зазвичай командною оболонкою за замовчуванням є bash (GNU Bourne Again Shell), але доступні й інші розширені командні оболонки. Оболонка друкує текстове повідомлення, вказуючи, що готова приймати команди. Після того, як користувач вводить команду та натискає Enter, команда виконується, а після виконання команди відображається інший запит.

----------------------------------------------------------------------------------------------------------

Завантажувач завантажує як ядро, так і початкову файлову систему на основі оперативної пам’яті (initramfs) у пам’ять, тому ядро може використовувати її безпосередньо.

Коли ядро завантажується в оперативну пам’ять, воно негайно ініціалізує та налаштовує пам’ять комп’ютера, а також налаштовує все апаратне забезпечення, підключене до системи. Сюди належать усі процесори, підсистеми вводу / виводу, пристрої зберігання даних тощо. Ядро також завантажує деякі необхідні програми простору користувача.

----------------------------------------------------------------------------------------------------------

Після того, як ядро налаштувало все своє обладнання та змонтувало кореневу файлову систему, ядро запускає /sbin/init. Це тоді стає початковим процесом, який потім запускає інші процеси для запуску системи. Більшість інших процесів у системі простежують своє походження в кінцевому підсумку до init; винятком є так звані процеси ядра. Вони запускаються безпосередньо ядром; їх завдання полягає в керуванні внутрішніми деталями операційної системи.

Окрім запуску системи, init відповідає за підтримку роботи системи та безпомилкове завершення її роботи. Один з його обов’язків – діяти, коли це потрібно, як менеджер для всіх позаядерних процесів; він очищає їх після завершення та перезапускає служби входу користувачів у разі потреби, коли користувачі входять і виходять, і робить те саме для інших фонових системних служб.

Традиційно цей запуск процесу здійснювався з використанням угод, які датуються 1980-ми роками та різновидом System V UNIX. У цьому послідовному процесі система проходила через послідовність рівнів виконання, що містять колекції сценаріїв, які запускають і зупиняють сервіс. Кожен рівень запуску підтримував інший режим роботи системи. На кожному рівні виконання окремі сервіси можуть бути налаштовані на запуск або завершення роботи, якщо вони запущені.

Однак усі основні дистрибутиви відійшли від цього послідовного методу ініціалізації системи на рівні запуску, хоча вони зазвичай емулюють багато утиліт System V з метою сумісності. Далі ми обговоримо нові методи, серед яких systemd став провідним.

------------------------------------------------------------------------------------------------------------

SysVinit розглядав речі як серійний процес, розділений на серію послідовних етапів. Кожен етап потребував завершення перед наступним. Таким чином, запуску непросто скористатися перевагами паралельної обробки, яку можна було виконати на кількох процесорах або ядрах.

Крім того, завершення роботи та перезавантаження вважалися відносно рідкісними подіями і не мало значення, скільки часу вони тривали. Тепер це вже не так, особливо для мобільних пристроїв і вбудованих систем Linux. Деякі сучасні методи, такі як використання контейнерів, можуть запускатися майже миттєво. Системи нині потребують методів із швидшими та розширеними можливостями. Отже, старі методи потребували досить складних сценаріїв запуску, які було важко підтримувати універсальними для версій дистрибутива, версій ядра, архітектур і типів систем. Було розроблено дві основні альтернативи:

Upstart

Розроблено Ubuntu і вперше включено в 2006 році.
Прийнято у Fedora 9 (2008) і в RHEL 6 та його клонах.
systemd

Вперше прийнято Fedora (у 2011 році).
Прийнято RHEL 7 і SUSE.
Замінено Upstart в Ubuntu 16.04.
Хоча перехід на systemd був досить суперечливим, його прийняли всі основні дистрибутиви, тому ми не будемо обговорювати старіший метод System V або Upstart, які стали глухим кутом. Незалежно від того, як хтось ставиться до суперечок або технічних методів systemd, загальне впровадження спростило навчання роботи в системах Linux, оскільки між дистрибутивами менше відмінностей. Далі ми перерахуємо функції systemd.

-------------------------------------------------------------------------------------------------------------

Системи з systemd запускаються швидше, ніж із попередніми методами ініціалізації, переважно тому, що він замінює серіалізований набір кроків агресивними методами розпаралелювання, які дозволяють одночасно запускати кілька сервісів.

Складні сценарії оболонки запуску замінено простішими конфігураційними файлами, які обчислюють, що потрібно зробити перед запуском сервісу, як виконати запуск сервісу та які умови сервіс має вказати, що були виконані після завершення запуску. Варто зауважити, що /sbin/init тепер просто вказує на /lib/systemd/systemd, тобто systemd бере на себе процес ініціалізації.

Одна команда systemd (systemctl) використовується для більшості основних завдань. Хоча ми ще не говорили про роботу в командному рядку, ось короткий перелік його застосування:

запуск, зупинка, перезапуск служби (з використанням httpd, вебсервера Apache, як приклад) у поточній системі:
$ sudo systemctl start|stop|restart httpd.service
увімкнення або вимкнення системної служби під час завантаження системи:
$ sudo systemctl enable|disable httpd.service
У більшості випадків .service можна опустити. Існує багато технічних відмінностей від старих методів, які виходять за межі нашого обговорення.

----------------------------------------------File Systems-----------------------------------------------------

Уявіть холодильник із кількома полицями, які можна використовувати для зберігання різних предметів. Ці полиці допомагають упорядковувати продукти за формою, розміром, типом тощо. Ця сама концепція стосується файлової системи, яка є втіленням методу зберігання та організації довільних колекцій даних у формі, зручній для використання людиною.

Різні типи файлових систем, які підтримуються Linux:

звичайні дискові файлові системи: ext3, ext4, XFS, Btrfs, JFS, NTFS, vfat, exfat тощо;
файлові системи флеш-сховища: ubifs, jffs2, yaffs тощо;
файлові системи баз даних;
файлові системи спеціального призначення: procfs, sysfs, tmpfs, squashfs, debugfs, fuse тощо.
У цьому розділі буде описано стандартну структуру файлової системи, яку використовують більшість дистрибутивів Linux.

Розділ – це фізично суміжна частина диска або те, що має такий вигляд у деяких розширених налаштуваннях.

Файлова система – це спосіб зберігання / пошуку файлів на жорсткому диску (зазвичай у розділі).

Розділ можна розглядати як контейнер, у якому міститься файлова система, хоча за деяких обставин файлова система може охоплювати більше ніж один розділ, якщо використовувати символічні посилання, які ми обговоримо набагато пізніше.

Системи Linux зберігають свої важливі файли відповідно до стандартного макета під назвою «Стандарт ієрархії файлової системи» (FHS), який протягом тривалого часу підтримується The Linux Foundation. Для отримання додаткової інформації перегляньте документ «Стандарт ієрархії файлової системи», створений LSB Workgroup (подано англійською мовою). Стандарт призначено для того, щоби користувачі, адміністратори та розробники могли переходити між дистрибутивами і не вивчати повторно, як організована система.

Linux використовує символ «/» для розділення шляхів (на відміну від Windows, де використовується «\») і не має літер дисків. Кілька дисків і / або розділів монтуються як каталоги в одній файловій системі. Змінні носії, такі як USB-накопичувачі, компакт-диски та DVD-диски, відображатимуться як змонтовані в /run/media/yourusername/disklabel для останніх систем Linux або в /media для старіших дистрибутивів. Наприклад, якщо ім’я користувача student, флеш-накопичувач USB з позначкою FEDORA може бути знайдено в /run/media/student/FEDORA, а файл README.txt на цьому диску буде в /run/media/student/FEDORA/README.txt.

Усі назви файлових систем Linux чутливі до регістру, тому /boot, /Boot і /BOOT будуть трьома різними каталогами (або папками). Багато дистрибутивів розрізняють основні утиліти, необхідні для належної роботи системи, й інші програми та розміщують останні в каталогах у /usr (користувач). Щоб зрозуміти, як організовані інші програми, знайдіть каталог /usr на схемі з попередньої сторінки та порівняйте підкаталоги з тими, які розташовані безпосередньо в системному кореневому каталозі (/).

--------------------------------Distributors-----------------------------------------------------------

Припустімо, що ви збираєтесь купити новий автомобіль. Які фактори потрібно врахувати, щоби зробити правильний вибір? Серед вимог, які слід узяти до уваги, буде такий розмір, щоби помістилася вся ваша сім’я, тип двигуна, економія бензину, приблизний бюджет і доступні варіанти фінансування, надійність, обслуговування тощо.

Питання, над якими варто подумати, перш ніж прийняти рішення про дистрибутив:

Яка основна функція системи (сервер чи персональний комп’ютер)?
Які типи пакетів важливі для організації? Наприклад, вебсервер, обробка тексту тощо.
Скільки місця на жорсткому диску потрібно і скільки доступно? Наприклад, під час інсталювання Linux на вбудованому пристрої простір обмежений.
Як часто оновлюються пакети?
Який цикл підтримується для кожного випуску? Наприклад, випуски LTS мають довгострокову підтримку.
Вам потрібна настройка ядра від постачальника чи третьої сторони?
На якому апаратному забезпечені ви працюєте? Наприклад, X86, ARM, PPC тощо.
Вам потрібна довгострокова стабільність? Чи можете ви прийняти (або потребувати) більш нестабільну передову систему з найновішим програмним забезпеченням?

Розташування розділів потрібно визначити під час інсталяції; це може бути важко змінити потім. У той час як системи Linux обробляють кілька розділів, монтуючи їх у певних точках файлової системи, і ви завжди можете змінити структуру пізніше, завжди легше спробувати зробити все правильно спочатку.

Майже всі інсталятори надають прийнятний пакет за замовчуванням, або весь простір, виділений для звичайних файлів в одному великому розділі та меншому розділі підкачки, або з окремими розділами для деяких чутливих до простору областей, таких як /home і /var. Можливо, вам доведеться перевизначити значення за замовчуванням і зробити щось інше, якщо у вас є особливі потреби або якщо ви хочете використовувати більше ніж один диск.

----------------------------------------------------------------------------------------------------------

В усіх інсталяціях є мінімум програмного забезпечення для запуску дистрибутива Linux.

Більшість інсталяторів також надають опції для додавання категорій програмного забезпечення. Поширені програми (такі як веббраузер Firefox і офісний пакет LibreOffice), інструменти розробника (наприклад, текстові редактори vi та emacs, які ми досліджуватимемо пізніше в цьому курсі) й інші популярні сервіси (такі як інструменти вебсервера Apache або база даних MySQL) зазвичай включені. Крім того, для будь-якої системи з графічним робочим столом вибраний робочий стіл (наприклад, GNOME або KDE) інсталюється за замовчуванням.

Усі інсталятори налаштували деякі початкові функції безпеки в новій системі. Один з основних кроків полягає у встановленні пароля для суперкористувача (root) і налаштуванні початкового користувача. У деяких випадках (наприклад, Ubuntu) налаштовується лише початковий користувач; прямий вхід root не налаштовано, і доступ root вимагає входу спочатку як звичайного користувача, а потім за допомогою sudo, як ми опишемо пізніше. Деякі дистрибутиви також інсталюють більш потужні системи безпеки, такі як SELinux або AppArmor. Наприклад, усі системи на основі Red Hat, включно з Fedora та CentOS, завжди використовують SELinux за замовчуванням, а Ubuntu постачається із запущеним AppArmor.

Як і інші операційні системи, дистрибутиви Linux постачаються на знімних носіях, таких як USB-накопичувачі та компакт- чи DVD-диски. Більшість дистрибутивів Linux також підтримують завантаження невеликого образу та завантаження решти системи через мережу. Ці невеликі образи можна використовувати на носіях або як образи мережевого завантаження; у цьому випадку можна виконати інсталяцію без використання локальних носіїв.

Багато інсталяторів можуть виконати інсталяцію повністю автоматично, використовуючи файл конфігурації для визначення параметрів інсталяції. Цей файл називається файлом Kickstart для систем на базі Red Hat, профілем AutoYAST для систем на основі SUSE та файлом Preseed для систем на основі Debian.

Кожен дистрибутив надає власну документацію та інструменти для створення цих файлів та керування ними.

-----------------------------------------------------------------------------------------------------------

Процес інсталювання доволі подібний для всіх дистрибутивів.

Після завантаження з інсталяційного носія запускається інсталятор і запитує, як налаштувати систему. Ці запитання пропускаються, якщо надається файл автоматичної інсталяції. Потім виконується інсталяція.

Зрештою комп’ютер перезавантажується у щойно інстальовану систему. У деяких дистрибутивах після перезавантаження системи з’являються додаткові запитання.

Більшість інсталяторів мають можливість завантажувати й інсталювати оновлення як частину процесу інсталювання; для цього потрібен доступ до інтернету. В іншому випадку система використовує звичайний механізм оновлення для отримання цих оновлень після інсталювання.

-----------------------------------------------------------------------------------------------------------

ВАЖЛИВО!

Демонстрації показують, як установити Linux на ваш комп’ютер, видаливши все, що там було. Демонстрації не змінять ваш комп’ютер, проте виконання цих процедур у реальному житті призведе до видалення всіх поточних даних.

The Linux Foundation має документ «Підготовка вашого комп’ютера до навчання Linux (див. нижче), який описує альтернативні методи інсталяції Linux без перезапису наявних даних. Можете переглянути його, якщо вам потрібно зберегти інформацію на жорсткому диску.

Альтернативні методи:

Повторне розбиття жорсткого диска, щоб звільнити достатньо місця, щоб дозволити подвійне завантаження (пліч-о-пліч) інсталювання Linux разом із поточною операційною системою.
Використання програми гіпервізора хост-машини (наприклад, продуктів VMWare або Oracle Virtual Box) для інсталювання клієнтської віртуальної машини Linux.
Завантаження з компакт-диска або USB-накопичувача та їх використання, а запис на жорсткий диск взагалі не виконується.
Перший метод іноді складний і його слід застосовувати, коли ви впевнені в собі та розумієте, які кроки потрібно виконати. Другий і третій способи досить безпечні і зменшують ризик пошкодження системи.

_____________________________________________________________________

df -Th /                - command to show free place on disc

cat /proc/swaps         - command to show swapfile
_____________________________________________________________________



Ви закінчили розділ 3. Підсумуймо основні розглянуті поняття:

Розділ – це логічна частина диска.
Файлова система – це спосіб зберігання / пошуку файлів на жорсткому диску.
Розділивши жорсткий диск на розділи, можна групувати та розділяти дані за потреби. Якщо станеться збій або помилка, будуть пошкоджені лише дані в ураженому розділі, тоді як дані в інших розділах радше за все збережуться.
Процес завантаження складається з кількох етапів і починається з BIOS, який запускає завантажувач для запуску ядра Linux. Звідти викликається файлова система initramfs, яка запускає програму ініціалізації для завершення процесу запуску.
Визначення відповідного дистрибутива для розгортання вимагає узгодження потреб вашої системи з можливостями різних дистрибутивів.



