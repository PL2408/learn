---------------------------------Навчальні цілі-----------------------------------

Після проходження цього розділу ви зможете:

Пояснювати основні поняття мереж, включно з типами мереж і вирішенням проблем.
Налаштовувати мережеві інтерфейси та використовувати основні мережеві утиліти, такі як ifconfig, ip, ping, route та traceroute.
Використовувати графічні та неграфічні браузери, такі як Lynx, w3m, Firefox, Chrome і Epiphany.
Передавати файли до клієнтів і серверів і з них за допомогою графічних і текстових програм, таких як Filezilla, ftp, sftp, curl і wget.

------------------------------------Мережа----------------------------------------

Мережа – це група комп’ютерів і обчислювальних пристроїв, з’єднаних між собою за допомогою каналів зв’язку, наприклад, кабелів або бездротового зв’язку. Комп’ютери, з’єднані через мережу, можуть бути розташовані в одній географічній зоні або розкидані по всьому світу.

Мережу використовують для:

дозволу підключеним пристроям спілкуватися один з одним,
дозволу кільком користувачам спільно використовувати пристрої в мережі, наприклад, музичні та відеосервери, принтери та сканери,
легкого передавання інформації та для керування нею на комп’ютерах.
Більшість організацій мають внутрішню мережу та підключення до інтернету, щоби користувачі могли спілкуватися з машинами та людьми за межами організації. Інтернет – найбільша мережа у світі, її можна назвати мережею мереж.

--------------------------------IP-адреси----------------------------------------

Пристрої, підключені до мережі, повинні мати принаймні один унікальний ідентифікатор адреси мережі, відомий як IP-адреса (Internet Protocol). Адреса потрібна для маршрутизації пакетів інформації через мережу.

Обмін інформацією в мережі вимагає використання потоків невеликих пакетів, кожен з яких містить частину інформації, що передається від однієї машини до іншої. Ці пакети містять буфери даних разом із заголовками, які містять інформацію про те, куди йде і звідки надходить пакет, а також місце його розташування в послідовності пакетів, що утворюють потік. Мережеві протоколи та програмне забезпечення досить складні через різноманіття машин і операційних систем, з якими вони мають працювати, а також через те, що мають підтримуватися навіть дуже старі стандарти.

--------------------------------IPv4 і IPv6--------------------------------------

Доступно два різні типи IP-адрес: IPv4 (версія 4) і IPv6 (версія 6). IPv4 – старіший і значно ширше використовується, тоді як IPv6 – новіший і розроблений, щоби позбутися обмежень, притаманних старішому стандарту, і надати багато можливих адрес.

IPv4 використовує 32 біти для адрес; доступно лише 4,3 мільярда унікальних адрес. Крім того, багато адрес виділені та зарезервовані, але фактично не використовуються. IPv4 вважають недостатнім для задоволення майбутніх потреб, оскільки за останні роки кількість пристроїв, доступних у глобальній мережі, надзвичайно зросла.

IPv6 використовує 128 бітів для адрес; це дозволяє створити 3,4 × 1038 унікальних адрес. Якщо у вас є більша мережа комп’ютерів і ви хочете додати більше, ви можете перейти на IPv6, оскільки він надає більше унікальних адрес. Однак перехід на IPv6 може бути складним; два протоколи не завжди добре взаємодіють. Таким чином, перенесення обладнання та адрес на IPv6 потребує значних зусиль і не так швидко, як передбачалося спочатку. Ми будемо обговорювати IPv4 більше, ніж IPv6, оскільки ви радше за все матимете справу з ним.

Однією з причин, чому IPv4 не зник, є способи ефективно зробити доступними багато інших адрес за допомогою таких методів, як NAT (Network Address Translation). NAT дозволяє спільно використовувати одну IP-адресу між багатьма локально підключеними комп’ютерами, кожен з яких має унікальну адресу, яку можна побачити лише в локальній мережі. Цим здебільшого користуються в організаціях, однак можливо налаштувати і в простих домашніх мережах. Наприклад, якщо у вас є маршрутизатор, підключений до вашого інтернет-провайдера (наприклад, кабельна система), він надає вам одну зовнішню видиму адресу, але видає кожному пристрою у вашому будинку окрему локальну адресу.

---------------------------------Декодування адрес IPv4--------------------------

32-бітна адреса IPv4 розділена на чотири 8-бітні секції, які називаються октетами.

Приклад:

IP-адреса →                172 .          16 .           31 .          46
Бітовий формат → 10101100.00010000.00011111.00101110

ПРИМІТКА. Октет – це просто інше слово для байта.

Адреси мережі поділяються на п’ять класів: A, B, C, D і E. Класи A, B і C поділяються на дві частини: ідентифікатор мережі (Net ID) та ідентифікатор хоста (Host ID). Net ID використовують для ідентифікації мережі, тоді як Host ID використовують для ідентифікації хоста в мережі. Клас D використовують для спеціальних багатоадресних програм (інформація передається на кілька комп’ютерів одночасно), а клас E зарезервовано для використання в майбутньому. У цьому розділі ви дізнаєтеся про класи A, B і C.

-----------------------------Адреси мережі класу А------------------------------

Адреси класу A використовують перший октет IP-адреси як ідентифікатор мережі, а інші три октети використовують як ідентифікатор хоста. Перший біт першого октету завжди дорівнює нулю. Тому ви можете використовувати лише 7 бітів для унікальних мережевих номерів. У результаті доступно максимум 126 мереж класу А (адреси 0000000 і 1111111 зарезервовані). Не дивно, що це було можливо лише тоді, коли існувало дуже мало унікальних мереж із великою кількістю хостів. Коли інтернетом почали користуватися інтенсивніше, були додані класи B і C, щоби задовольнити дедалі більший попит на незалежні мережі.

Кожна мережа класу А може мати до 16,7 млн унікальних хостів у своїй мережі. Діапазон адрес хостів від 1.0.0.0 до 127.255.255.255.

---------------------------Адреси мережі класу B--------------------------------

Адреси класу B використовують перші два октети IP-адреси як ідентифікатор мережі, а останні два октети – як ідентифікатор хоста. Перші два біти першого октету завжди встановлюються як двійкові 10, тому існує максимум 16384 (14 бітів) мереж класу B. Перший октет адреси класу B має значення від 128 до 191. Впровадження мереж класу B розширило кількість мереж, але незабаром стало зрозуміло, що знадобиться додатковий рівень.

Кожна мережа класу B може підтримувати максимум 65 536 унікальних хостів у своїй мережі. Діапазон адрес хостів від 128.0.0.0 до 191.255.255.255.

---------------------------Адреси мережі класу C-------------------------------

Адреси класу C використовують перші три октети IP-адреси як ідентифікатор мережі, а останній октет – як ідентифікатор хоста. Перші три біти першого октету налаштовані на двійкові 110, тому доступно майже 2,1 мільйона (21 біт) мереж класу C. Перший октет адреси класу C має значення від 192 до 223. Це найбільш популярний для невеликих мереж, які не мають багато унікальних хостів.

Кожна мережа класу C може підтримувати до 256 (8 бітів) унікальних хостів. Діапазон адрес хостів від 192.0.0.0 до 223.255.255.255.

--------------------------Розміщення IP-адреси--------------------------------

Зазвичай адміністратор мережі вашої організації запитує діапазон IP-адрес у вашого постачальника інтернет-послуг (ISP). Часто ваш вибір класу IP-адреси залежить від розміру вашої мережі та очікуваних потреб у зростанні. Якщо працює NAT, наприклад, у домашній мережі, ви отримуєте лише одну зовнішню видиму адресу.

Розміщення IP-адреси

Ручне (статичний IP)
Динамічне (протокол динамічної конфігурації хоста)

Ви можете призначати IP-адреси комп’ютерам у мережі вручну або динамічно. Призначення вручну додає до мережі статичні (незмінні) адреси. Динамічно призначені адреси можуть змінюватися під час кожного перезавантаження або навіть частіше. Для призначення IP-адрес використовують протокол динамічної конфігурації хоста (DHCP).

--------------------Розпізнавання імен----------------------------------------

Розпізнавання імен використовують для перетворення числових значень IP-адреси на зрозумілий людині формат, відомий як ім’я хоста. Наприклад, 104.95.85.15 – це числова IP-адреса, яка посилається на ім’я хоста whitehouse.gov. Імена хостів набагато легше запам’ятати!

Враховуючи IP-адресу, ви можете отримати відповідне ім’я хоста. Доступ до апарата через мережу стає легшим, якщо замість IP-адреси можна ввести ім’я хоста.

Ви можете переглянути ім’я хоста вашої системи, ввівши hostname без аргументів.

ПРИМІТКА. Якщо ви вкажете аргумент, система спробує змінити своє ім’я хоста, щоби відповідати йому, однак це можуть зробити лише суперкористувачі.

Спеціальне ім’я хоста localhost пов’язане з IP-адресою 127.0.0.1 і описує машину, на якій ви зараз перебуваєте (яка зазвичай має додаткові IP-адреси, пов’язані з мережею).

-------------------Мережеві конфігураційні файли------------------------------

Мережеві конфігураційні файли потрібні для забезпечення правильної роботи інтерфейсів. Вони розташовані в дереві каталогів /etc. Однак точні файли, які використовувалися, історично залежали від конкретного дистрибутива Linux і версії, що використовується.

Для конфігурацій родини Debian основні мережеві конфігураційні файли можна знайти в /etc/network/, тоді як для систем родин Red Hat і SUSE потрібно перевірити /etc/sysconfig/network.

Сучасні системи наполягають на використанні Network Manager, який ми коротко обговорювали, коли розглядали графічне системне адміністрування, замість того, щоб намагатися не відставати від примх файлів у /etc. Хоча графічні версії Network Manager справді дещо різні в різних дистрибутивах, утиліта nmtui (показано на знімку екрана) майже не відрізняється, як і ще більш рідкісна утиліта nmcli (інтерфейс командного рядка). Якщо ви вмієте працювати у графічному інтерфейсі користувача, неодмінно використовуйте її. Якщо ви працюєте з різними системами, утиліти нижчого рівня можуть полегшити вам життя.

Network Manager

До останніх дистрибутивів Ubuntu входить netplan, який включено за замовчуванням і який замінює Network Manager. Оскільки жоден інший дистрибутив не виявив інтересу і оскільки його можна легко відключити, якщо він вас турбує, ми його проігноруємо.

------------------------Мережеві інтерфейси-----------------------------------

Мережеві інтерфейси – це канал з’єднання між пристроєм і мережею. Фізично мережеві інтерфейси можуть проходити через плату мережевого інтерфейсу (NIC) або можуть бути реалізовані більш абстрактно як програмне забезпечення. Ви можете мати кілька мережевих інтерфейсів, що працюють одночасно. Певні інтерфейси можна відкрити (активувати) або закрити (деактивувати) у будь-який час.

Інформацію про певний мережевий інтерфейс або всі мережеві інтерфейси можна повідомити за допомогою утиліт ip та ifconfig, які вам, можливо, доведеться запустити з позиції суперкористувача, або принаймні вказати повний шлях, тобто /sbin/ifconfig, у деяких дистрибутивах. ip новіша, ніж ifconfig, і має набагато більше можливостей, але її вивід не найприємніший для людського ока. У деяких нових дистрибутивах Linux не встановлено старішого пакету net-tools, до якого входить ifconfig, тому вам доведеться встановити його самим, якщо хочете ним користуватися.

--------------------------------Утиліта ip------------------------------------

Щоби переглянути IP-адресу:

$ /sbin/ip addr show

Щоби переглянути інформацію про маршрут:

$ /sbin/ip route show

ip – це дуже потужна програма, яка може багато чого робити. Старіші (і більш специфічні) утиліти, такі як ifconfig і route, часто використовують для виконання подібних завдань. Перегляньте відповідні довідкові сторінки, щоби дізнатися більше про ці утиліти.

----------------------------------ping----------------------------------------

ping використовують для перевірки того, чи може машина, підключена до мережі, отримувати та надсилати дані; тобто підтверджує, що віддалений хост в онлайні і відповідає.

Щоби перевірити стан віддаленого хоста, у командному рядку введіть ping <hostname>.

ping часто використовують для тестування та керування мережею; однак її використання може неприйнятно збільшити навантаження на мережу. Ви можете перервати виконання ping, набравши CTRL+C або скориставшись параметром -c, який обмежує кількість пакетів, які ping надішле до завершення дії. Коли виконання зупиняється, відображається підсумок.

-------------------------------route------------------------------------------

Мережа вимагає з’єднання багатьох вузлів. Дані переміщуються від джерела до місця призначення, проходячи через ряд маршрутизаторів і, можливо, через кілька мереж. Сервери підтримують таблиці маршрутизації, що містять адреси кожного вузла в мережі. Протоколи IP-маршрутизації дозволяють маршрутизаторам створювати таблицю переадресації, яка співвідносить кінцеві пункти призначення з адресами наступного переходу.

route

Для перегляду або зміни таблиці IP-маршрутизації, щоб додати, видалити або змінити певні (статичні) маршрути до певних хостів або мереж, можна використовувати утиліту route або новішу команду ip route. У таблиці наведено деякі команди, які можна використовувати для керування IP-маршрутизацією.

Команда	Завдання
$ route –n або ip route	Показати поточну таблицю маршрутизації
$ route add -net address або ip route add	Додати статичний маршрут
$ route del -net address або ip route del	Видалити статичний маршрут

----------------------------traceroute----------------------------------------

traceroute використовують для перевірки маршруту, яким пакет даних досягає хоста призначення, що робить її дуже корисною для усунення затримок мережі та помилок. З допомогою traceroute ви можете ізолювати проблеми з підключенням між переходами, що допоможе швидше їх вирішити.

Щоби надрукувати маршрут, яким пакет досягає хоста мережі, у командному рядку введіть traceroute <address>.

--------------------Більше мережевих інструментів-----------------------------

Дізнаймося більше про додаткові мережеві інструменти. Мережеві інструменти дуже корисні для моніторингу та усунення проблем мережі, таких як підключення до мережі та мережевий трафік.

Мережеві інструменти	                                     Опис
ethtool	                     Запитує мережеві інтерфейси, а також може встановлювати різні параметри, наприклад швидкість
netstat	                     Відображає всі активні з’єднання та таблиці маршрутизації; корисно для моніторингу продуктивності та усунення несправностей
nmap	                     Сканує відкриті порти в мережі; важливо для аналізу безпеки
tcpdump	                     Скидає мережевий трафік для аналізу
iptraf	                     Відстежує мережевий трафік у текстовому режимі
mtr	                         Поєднує функціональні можливості ping і traceroute і надає дисплей, що постійно оновлюється
dig	                         Перевіряє роботу DNS; хороша заміна host та nslookup

-----------------------Графічні та неграфічні браузери------------------------

Браузери використовують для пошуку, передачі та дослідження інформаційних ресурсів, зазвичай у всесвітній павутині. Користувачі Linux зазвичай використовують як графічні, так і неграфічні браузери.

Поширені графічні браузери, які використовують у Linux:

Firefox
Google Chrome
Chromium
Konqueror
Opera
Іноді у вас або немає графічного середовища для роботи, або є причини не використовувати його, але все одно потрібен доступ до вебресурсів. У такому випадку ви можете використовувати неграфічні браузери.

Неграфічні браузери	Опис
lynx	Настроюваний текстовий веббраузер; найперший подібний браузер, який використовується досі
elinks	На основі Lynx; може відображати таблиці та рамки
w3m	Текстовий веббраузер із багатьма функціями

------------------------------------wget--------------------------------------

Іноді вам потрібно завантажити файли та інформацію, але браузер не найкращий вибір, тому що ви хочете завантажити кілька файлів і/або каталогів або ви хочете виконати дію з командного рядка чи сценарію. wget – це утиліта командного рядка, яка може обробляти такі типи завантажень:

завантаження великих файлів;
рекурсивні завантаження, коли вебсторінка посилається на інші вебсторінки, і всі завантажуються одночасно;
завантаження, для яких потрібен пароль;
кілька завантажень файлів.
Щоби завантажити вебсторінку, ви можете ввести wget <url>, а потім зможете прочитати завантажену сторінку як локальний файл за допомогою графічного чи неграфічного браузера.

----------------------------------curl----------------------------------------

Окрім завантаження, ви можете отримати інформацію про URL-адресу, наприклад, використовуваний вихідний код. curl можна використовувати з командного рядка або сценарію для читання такої інформації. curl також дозволяє зберігати вміст вебсторінки у файл, як і wget.

Ви можете прочитати URL за допомогою curl <URL>. 

Наприклад, якщо ви хочете прочитати http://www.Linuxfoundation.org, введіть curl http://www.Linuxfoundation.org.

Щоб отримати вміст вебсторінки та зберегти його у файлі, введіть curl -o saved.html http://www.mysite.com. Вміст основного індексного файлу на вебсайті буде збережено в saved.html.

------------------FTP (протокол передачі файлів)------------------------------

Коли ви підключені до мережі, вам може знадобитися передавати файли з однієї машини на іншу. Протокол передачі файлів (FTP) – добре відомий і популярний метод передачі файлів між комп’ютерами через інтернет. Цей метод побудований на моделі «клієнт – сервер». FTP можна використовувати в браузері або з автономними клієнтськими програмами.

Протокол передачі файлів

Тексти написів:

Протокол передачі файлів
FTP-сервер
Машина користувача Машина користувача Машина користувача

FTP – один із найстаріших методів мережевої передачі даних, який з’явився на початку 1970-х років. Його вважають неадекватним для сучасних потреб, а також внутрішньо небезпечним. Однак ним досі користуються, і коли безпека не проблема (наприклад, з так званим анонімним FTP), це може мати сенс. Однак багато сайтів, наприклад kernel.org, відмовилися від його використання.

----------------------------------FTP-клієнти--------------------------------

FTP-клієнти дозволяють передавати файли на віддалені комп’ютери за допомогою протоколу FTP. Ці клієнти можуть бути графічними інструментами або інструментами командного рядка. Filezilla, наприклад, дозволяє використовувати підхід «drag-n-drop» для передачі файлів між хостами. Усі браузери підтримують FTP. Вам потрібно лише вказати URL-адресу, наприклад ftp://ftp.kernel.org, де звичайний http:// стає ftp://.

Деякі FTP-клієнти командного рядка:

ftp
sftp
ncftp
yafc (ще один FTP-клієнт).
FTP впав у немилість у сучасних системах через небезпечність за своєю суттю: паролі – це облікові дані користувача, які можна передавати без шифрування, а отже, є шанс їх перехопити. Таким чином, йому знайшлася заміна у вигляді rsync і https-доступу браузера. Є інша альтернатива – sftp. Це дуже безпечний режим підключення, який використовує протокол Secure Shell (ssh), про який ми невдовзі поговоримо. sftp шифрує свої дані, тому конфіденційна інформація передається більш безпечно. Однак він не працює із так званим anonymous FTP (облікові дані гостьового користувача).

------------------SSH: віддалене виконання команд-----------------------------

Secure Shell (SSH) – це криптографічний мережевий протокол, який використовують для безпечного обміну даними. Його також використовують для віддалених служб та інших захищених служб між двома пристроями в мережі. Він дуже корисний для адміністрування систем, які важкодоступні для фізичної роботи, але до яких ви маєте віддалений доступ.

SSH: віддалене виконання команд

Щоб увійти у віддалену систему, використовуючи своє ім’я користувача, введіть ssh some_system і натисніть Enter. потім ssh запропонує ввести віддалений пароль. Ви також можете налаштувати ssh, щоби безпечно дозволити віддалений доступ без введення паролю щоразу.

Якщо ви хочете працювати як інший користувач, ви можете ввести ssh -l someone some_system або ssh someone@some_system. Щоби запустити команду у віддаленій системі через SSH, у командному рядку можна ввести ssh some_system my_command.

-----------------Безпечне копіювання файлів за допомогою scp------------------

Ми також можемо безпечно переміщувати файли за допомогою Secure Copy (scp) між двома мережевими хостами. scp використовує протокол SSH для передачі даних.

Щоби скопіювати локальний файл у віддалену систему, у командному рядку введіть scp <localfile> <user@remotesystem>:/home/user/ і натисніть Enter.

Ви отримаєте запит на віддалений пароль. Ви також можете налаштувати scp так, щоби вона не запитувала пароль для кожної передачі.

--------Лабораторна робота 14.1. Пошук та усунення несправностей мережі-------

Під час роботи ви часто шукатимете та усуватимете несправності мережі. Ми застосуємо деякі раніше розглянуті інструменти, які допоможуть вам ізолювати, знайти та виправити проблеми мережі.

Файл рішення містить покрокову процедуру для використання багатьох інструментів, які ми вивчали. Будь ласка, повторіть кроки, замінивши фактичні імена мережевих інтерфейсів, альтернативні адреси мережі та вебсайти тощо.

Лабораторна робота 14.1. Розвʼязок

Під час роботи ви часто шукатимете та усуватимете несправності мережі. Ми застосуємо деякі раніше розглянуті інструменти, які допоможуть вам ізолювати, знайти та виправити проблеми мережі.

Припустімо, вам потрібно виконати пошук в інтернеті, але ваш браузер не може знайти google.com, кажучи, що хост невідомий. Виправимо це крок за кроком.

1. Спочатку переконайтеся, що ваша мережа правильно налаштована. Якщо ваш пристрій Ethernet запущений і працює, запущена ifconfig має відобразити щось на кшталт:

student:/tmp> /sbin/ifconfig

eno167777 Link encap:Ethernet  HWaddr 00:0C:29:BB:92:C2
          inet addr:192.168.1.14  Bcast:192.168.1.255 
Mask:255.255.255.0
          inet6 addr: fe80::20c:29ff:febb:92c2/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:3244 errors:0 dropped:0 overruns:0 frame:0
          TX packets:2006 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:4343606 (4.1 Mb)  TX bytes:169082 (165.1 Kb)
lo        Link encap:Local Loopback
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:0 (0.0 b)  TX bytes:0 (0.0 b) 

У старих системах ви, ймовірно, побачите менш загадкове ім’я, ніж eno167777, наприклад eth0, або на бездротовому з’єднанні ви можете побачити щось на зразок wlan0 або wlp3s0. Ви також можете показати свою IP-адресу за допомогою:

student:/tmp> ip addr show

1: lo:  mtu 65536 qdisc noqueue state UNKNOWN group default
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host
       valid_lft forever preferred_lft forever
2: eno16777736:  mtu 1500 qdisc pfifo_fast state \
    UP group default qlen 1000
    link/ether 00:0c:29:bb:92:c2 brd ff:ff:ff:ff:ff:ff
p    inet 192.168.1.14/24 brd 192.168.1.255 scope global dynamic
eno16777736
       valid_lft 84941sec preferred_lft 84941sec
    inet 192.168.1.15/24 brd 192.168.1.255 scope global secondary
dynamic eno16777736
       valid_lft 85909sec preferred_lft 85909sec
    inet6 fe80::20c:29ff:febb:92c2/64 scope link
       valid_lft forever preferred_lft forever      

IP-адреса схожа на дійсну? Залежно від того, звідки ви все робите, це буде радше за все IP-адреса класу C; у наведеному вище прикладів це 192.168.1.14.

Якщо не відображається пристрій з IP-адресою, можливо, потрібно запустити або перезапустити мережу та/або Network Manager. Як саме ви це зробите, залежить від вашої системи. У більшості дистрибутивів дієвою буде одна з цих команд:

student:/tmp> sudo systemctl restart NetworkManager
student:/tmp> sudo systemctl restart network
student:/tmp> sudo service NetworkManager restart
student:/tmp> sudo service network restart

Якщо ваш пристрій працював, але не мав IP-адреси, наведене вище мало би допомогти це виправити, але ви можете спробувати отримати нову адресу за допомогою

student:/tmp> sudo dhclient eth0

замінивши правильну назву для пристрою Ethernet.

2. Якщо ваш інтерфейс запущено із призначеною IP-адресою, але ви все ще не можете отримати доступ до google.com, треба переконатися, що вашому комп’ютеру призначено дійсне ім’я хоста з іменем хоста:

student:/tmp> hostname

openSUSE

З цим у вас нечасто виникнуть проблеми, оскільки завжди є принаймні типове ім’я хоста, наприклад localhost.

3. Коли ви вводите ім’я сайту, наприклад google.com, це ім’я має бути пов’язане з відомою IP-адресою. Зазвичай це робиться за допомогою DNS-сервера (система доменних імен)

По-перше, перевірте за допомогою ping, чи сайт працює і доступний:

student:/tmp> sudo ping -c 3 google.com

PING google.com (216.58.216.238) 56(84) bytes of data.
64 bytes from ord31s22-in-f14.1e100.net (216.58.216.238): icmp_seq=1 ttl=51 time=21.7 ms
64 bytes from ord31s22-in-f14.1e100.net (216.58.216.238): icmp_seq=2 ttl=51 time=23.8 ms
64 bytes from ord31s22-in-f14.1e100.net (216.58.216.238): icmp_seq=3 ttl=51 time=21.3 ms

--- google.com ping statistics —
3 packets transmitted, 3 received, 0% packet loss, time 2002ms
rtt min/avg/max/mdev = 21.388/22.331/23.813/1.074 ms

Примітка:

Ми використали sudo для ping; недавні дистрибутиви Linux вимагали цього, щоби неосвічені або зловмисні користувачі не перевантажували системи такими запитами.
Ми використали -c 3, щоб установити обмеження до 3 пакетів; інакше ping працюватиме вічно, доки його примусово не припинити, скажімо, за допомогою CTRL+C.
Якщо результат був:

ping: unknown host google.com

то цілком імовірно, що щось не так із налаштуваннями DNS. Зауважте, що в деяких системах ви ніколи не побачите повідомлення про невідомий хост, проте отримаєте підозрілий результат, наприклад:

student:/tmp> sudo ping l89xl28vkjs.com

PING l89xl28vkjs.com.site (127.0.53.53) 56(84) bytes of data.
64 bytes from 127.0.53.53: icmp_seq=1 ttl=64 time=0.016 ms
...      

де адреса 127.0.x.x – це цикл, що повертається до головної машини, на якій ви перебуваєте. Ви можете видалити цю адресу як дійсну, виконавши:

student:/tmp> host l89xl28vkjs.com

Host l89xl28vkjs.com not found: 3(NXDOMAIN)

тоді як правильний результат матиме такий вигляд:

student:/tmp> host google.com

google.com has address 216.58.216.206
google.com has IPv6 address 2607:f8b0:4009:80b::200e
google.com mail is handled by 20 alt1.aspmx.l.google.com.
google.com mail is handled by 10 aspmx.l.google.com.
google.com mail is handled by 30 alt2.aspmx.l.google.com.
google.com mail is handled by 40 alt3.aspmx.l.google.com.
google.com mail is handled by 50 alt4.aspmx.l.google.com.

Наведена вище команда використовує DNS-сервер, налаштований у /etc/resolv.conf на вашій машині. Якщо ви хочете змінити це, можна зробити:

host 8.8.8.8

8.8.8.8.in-addr.arpa domain name pointer google-public-dns-a.google.com.
student@linux:~> host google.com 8.8.8.8
Using domain server:
Name: 8.8.8.8
Address: 8.8.8.8#53
Aliases:

google.com has address 216.58.216.110
google.com has IPv6 address 2607:f8b0:4009:804::1002
...\

де ми використали загальнодоступний DNS-сервер, наданий самим Google. (Використання цього чи іншого публічного сервера іноді може бути хорошим трюком, якщо ваша мережа працює, але DNS пошкоджений, у такому випадку ви також можете ввести його в resolv.conf.)

Зауважте, що є інший файл, /etc/hosts, де ви можете пов’язати імена з IP-адресами; його використовують перед зверненням до DNS-сервера. Це найбільш корисно для визначення вузлів у вашій локальній мережі.

Ви також можете скористатися утилітою dig, якщо хочете:

student:/tmp> dig google.com

; <<>> DiG 9.9.5-rpz2+rl.14038.05-P1 <<>> google.com
;; global options: +cmd
;; Got answer:
;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 29613
;; flags: qr rd ra; QUERY: 1, ANSWER: 11, AUTHORITY: 0, ADDITIONAL: 1
;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; MBZ: 1c20 , udp: 1280
;; QUESTION SECTION:
;google.com.                    IN      A
;; ANSWER SECTION:
google.com.             244     IN      A       173.194.46.67
google.com.             244     IN      A       173.194.46.65
google.com.             244     IN      A       173.194.46.71
google.com.             244     IN      A       173.194.46.73
google.com.             244     IN      A       173.194.46.69
google.com.             244     IN      A       173.194.46.68
google.com.             244     IN      A       173.194.46.64
google.com.             244     IN      A       173.194.46.72
google.com.             244     IN      A       173.194.46.70
google.com.             244     IN      A       173.194.46.66
google.com.             244     IN      A       173.194.46.78

;; Query time: 22 msec
;; SERVER: 192.168.1.1#53(192.168.1.1)
;; WHEN: Mon Apr 20 08:58:58 CDT 2015
;; MSG SIZE  rcvd: 215

4. Припустімо, що хост або dig не можуть зв’язати ім’я з IP-адресою. Є багато причин, чому DNS може вийти з ладу. Ось деякі з них:

DNS-сервер не працює. У цьому випадку спробуйте перевірити, чи він активний (ви повинні мати IP-адресу в /etc/resolv.conf).
Сервер може бути запущений, але DNS на цей момент може бути недоступним на машині.
Ваш маршрут до DNS-сервера може бути неправильним.
Як можна перевірити маршрут? Відстеження маршруту до одного з публічних серверів імен, про які ми згадували раніше:

student@linux:~> sudo traceroute 8.8.8.8

traceroute to 8.8.8.8 (8.8.8.8), 30 hops max, 60 byte packets
 1  192.168.1.1 (192.168.1.1)  0.405 ms  0.494 ms  0.556 ms
 2  10.132.4.1 (10.132.4.1)  15.127 ms  15.107 ms  15.185 ms
 3  dtr02ftbgwi-tge-0-6-0-3.ftbg.wi.charter.com (96.34.24.122)

                                                         15.243 ms 15.327 ms  17.878 ms
 4  crr02ftbgwi-bue-3.ftbg.wi.charter.com (96.34.18.116)  17.667 ms  17.734 ms  20.016 ms
 5  crr01ftbgwi-bue-4.ftbg.wi.charter.com (96.34.18.108)  22.017 ms 
22.359 ms  22.052 ms
 6  crr01euclwi-bue-1.eucl.wi.charter.com (96.34.16.77)  29.430 ms 22.705 ms  22.076 ms
 7  bbr01euclwi-bue-4.eucl.wi.charter.com (96.34.2.4)  17.795 ms 
25.542 ms  25.600 ms
 8  bbr02euclwi-bue-5.eucl.wi.charter.com (96.34.0.7)  28.227 ms 28.270 ms  28.303 ms
 9  bbr01chcgil-bue-1.chcg.il.charter.com (96.34.0.9)  33.114 ms 
33.072 ms  33.175 ms
10  prr01chcgil-bue-2.chcg.il.charter.com (96.34.3.9)  36.882 ms 
36.794 ms  36.895 ms
11  96-34-152-30.static.unas.mo.charter.com (96.34.152.30)  42.585 ms 
42.326 ms  42.401 ms
12  216.239.43.111 (216.239.43.111)  28.737 ms 216.239.43.113
(216.239.43.113)

                                                            24.558 ms  23.941 ms
13  209.85.243.115 (209.85.243.115)  24.269 ms 209.85.247.17
(209.85.247.17)
   25.758 ms 216.239.50.123 (216.239.50.123)  25.433 ms
14  google-public-dns-a.google.com (8.8.8.8)  25.239 ms  24.003 ms  23.795 ms

Знову ж таки, це, мабуть, спрацює, але що як ви отримали лише перший рядок у виводі traceroute?

Якщо це сталося, радше за все ваш маршрут за замовчуванням неправильний. Спробуйте інакше:

student:/tmp> ip route show

efault via 192.168.1.1 dev eno16777736  proto static  metric 1024
192.168.1.0/24 dev eno16777736  proto kernel  scope link  src 192.168.1.14

Радше за все це встановлено для вашого мережевого інтерфейсу та IP-адреси вашого маршрутизатора, DSL або кабельного модему. Скажімо, він порожній або просто вказує на вашу машину. Ось вам проблема! На цьому етапі вам потрібно буде додати відповідний маршрут за замовчуванням і запустити кілька тестів, які ми щойно зробили.

Зауважте, що вдосконалена версія traceroute надається mtr, яка працює безперервно (як top). Запустіть її з параметром --report-cycles, щоб обмежити тривалість роботи:

student:/tmp> sudo mtr --report-cycles 3 8.8.8.8

                            My traceroute  [v0.85]
c7 (0.0.0.0)                                           Mon Apr 20 09:30:41 2015
Unable to allocate IPv6 socket for nameserver communication: Address family not supported
              by protocol                  Packets               Pings
 Host                                Loss%   Snt   Last   Avg  Best  Wrst StDev
                                      0.0%     3    0.3   0.3   0.2   0.3   0.0
 2. 10.132.4.1                        0.0%     3    6.3   7.1   6.3   8.4   0.7
 3. dtr02ftbgwi-tge-0-6-0-3.ftbg.wi.  0.0%     3    6.2   7.5   6.2  10.0   2.1
 4. dtr01ftbgwi-bue-1.ftbg.wi.charte  0.0%     3    8.9   8.5   6.2  10.4   2.0
 5. crr01ftbgwi-bue-4.ftbg.wi.charte  0.0%     3    8.9   9.7   8.9  10.4   0.0
 6. crr01euclwi-bue-1.eucl.wi.charte  0.0%     3   16.5  17.4  14.2  21.5   3.7
 7. bbr01euclwi-bue-4.eucl.wi.charte  0.0%     3   23.5  22.0  18.2  24.2   3.2
 8. bbr02euclwi-bue-5.eucl.wi.charte  0.0%     3   18.9  22.7  18.1  31.1   7.2
 9. bbr01chcgil-bue-1.chcg.il.charte  0.0%     3   22.9  23.0  22.9  23.1   0.0
10. prr01chcgil-bue-2.chcg.il.charte  0.0%     3   21.4  24.1  20.8  30.2   5.2
11. 96-34-152-30.static.unas.mo.char  0.0%     3   22.6  21.9  20.0  23.3   1.6
12. 216.239.43.111                    0.0%     3   21.2  21.7  21.2  22.0   0.0
13. 72.14.237.35                      0.0%     3   21.2  21.0  19.8  21.9   1.0
14. google-public-dns-a.google.com    0.0%     3   26.7  23.0  21.0  26.7   3.2

Сподіваємося, виконання деяких із цих команд допомогло. Це насправді допомагає побачити, що таке правильний вивід для вашої системи. Потренуйтеся використовувати ці команди; вони вам колись знадобляться.

----------------Лабораторна робота 14.2. Неграфічні браузери-------------

Бувають випадки, коли графічний браузер недоступний, але вам потрібно знайти або завантажити ресурс. У цій роботі ми будемо експериментувати з використанням неграфічних браузерів.

У файлі рішення міститься покрокова процедура використання розглянутих інструментів. Будь ласка, повторіть кроки, замінивши вебсайти та інше.

Лабораторна робота 14.2. Розвʼязок

Ми обговорювали неграфічні браузери:

lynx
links і elinks
w3m
У вас може не бути графічного інтерфейсу вікна, що працює на вашій машині з Linux, а вам потрібно щось знайти в інтернеті або завантажити драйвер (наприклад, графічний драйвер, щоби викликати графічний інтерфейс вікна). Тому варто потренуватися використовувати неграфічний браузер, щоби виконати певну роботу.

Ви можете клацнути мишею на верхньому рядку екрана, щоби відкрити меню. Ми хочемо перейти на google.com (або вашу улюблену пошукову систему), тому можна просто ввести g і перейти до введеної URL-адреси.

Натисканням клавіші Tab перемістить курсор до кнопки Ok. Потім натисніть клавішу Enter.

Тепер ви маєте бути на google.com (або вашій улюбленій пошуковій системі). Натискайте курсорну клавішу «Вниз», доки не дійдете до порожнього рядка, який використовують для введення пошукового запиту. Введіть графічні драйвери Intel Linux у полі пошуку. Натискайте курсорну клавішу «Вниз», щоби перейти до кнопки пошуку Google. Коли вона підсвітиться, натисніть клавішу Enter.

Натискайте курсорну клавішу «Вниз», щоби перейти до запису Intel(R) Graphics Drivers for Linux - Download Center. Може знадобитися кілька натискань курсорної клавіші «Вниз». Можете натиснути пробіл, щоби перейти вниз по сторінці, або клавішу b, щоби повернутися вгору, якщо потрібно. Коли цей рядок буде виділено, натисніть Enter. Ви перейдете на сторінку Intel Graphics Driver для Linux. Якщо хочете, можете прочитати сторінку. Пам’ятайте, що пробіл перемістить вас на сторінку вниз, а клавіша b перемістить вас назад. Курсорні клавіші «Вниз» і «Вгору» виконують ті самі дії, якщо вам так більше подобається. Знайдіть URL під рядком

URL Location:

Розташуйте курсор у цьому рядку за допомогою курсорних клавіш «Вниз» або «Вгору». Натисніть клавішу Enter, щоби перейти до цього місця.

Прокрутіть цю сторінку вниз, доки не побачите рядок:

Latest Releases

Якщо ви переміщуєте курсор за допомогою курсорних клавіш, знайдіть у цьому розділі останню версію (з останньою датою випуску). Якщо ви використовуєте курсорні клавіші, виділіть Release Notes. Натисніть клавішу Enter.

Тут є інсталятори для версій Ubuntu і Fedora разом із вихідним кодом. Залежно від розміру екрана вам потрібно буде перейти на одну або дві сторінки вниз.

Виберіть один з інсталяторів, можливо, для версії Linux, яку ви використовуєте, або просто випадковий, і натисніть клавішу Enter.

Ви маєте побачити текстове діалогове вікно з вибором дії. Збережіть пакет у будь-якому місці.

Тепер ви можете закрити неграфічний браузер. Якщо ви користувалися посиланнями, клацніть у верхньому рядку екрана, виберіть пункт спадного меню File і натисніть Exit. Підтвердіть, що ви дійсно хочете вийти з Links. Тепер ви маєте побачити вікно запиту на введення.

--------------------Короткий зміст розділу---------------------------

Ви завершили розділ 14. Підсумуємо основні розглянуті поняття:

IP-адреса (Internet Protocol) – це унікальна логічна адреса мережі, яка призначається пристрою в мережі.
IPv4 використовує 32 біти для адрес, а IPv6 використовує 128 бітів для адрес.
Кожна IP-адреса містить поле мережі та адреси хоста.
Доступно п’ять класів адрес мережі: A, B, C, D і E.
DNS (система доменних імен) використовують для перетворення імен інтернет-доменів і хостів на IP-адреси.
Програму ifconfig використовують для відображення поточних активних мережевих інтерфейсів.
Команди ip addr show та ip route show можна використовувати для перегляду IP-адреси та інформації про маршрутизацію.
Ви можете використовувати ping, щоби перевірити, чи віддалений хост активний і відповідає.
Ви можете використовувати утиліту route для керування IP-маршрутизацією.
За допомогою мережевих інструментів можна контролювати проблеми з мережею та усувати їх.
Firefox, Google Chrome, Chromium і Epiphany – це основні графічні браузери, які використовуються в Linux.
У Linux використовуються неграфічні, або текстові, браузери Lynx, Links і w3m.
Ви можете використовувати wget для завантаження вебсторінок.
Ви можете використовувати curl для отримання інформації про URL-адреси.
FTP (протокол передачі файлів) використовують для передачі файлів через мережу.
ftp, sftp, ncftp і yafc – FTP-клієнти командного рядка, які використовуються в Linux.
Ви можете використовувати ssh для запуску команд на віддалених системах.

